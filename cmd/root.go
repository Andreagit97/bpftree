package cmd

import (
	"github.com/spf13/cobra"

	"github.com/Andreagit97/bpftree/pkg/task"
)

const (
	/* Bump version here. */
	version string = "0.0.1"
)

var (
	disablePrettyPrint bool = false
	formatFields       []string
	captureFilePath    string = ""
	initialized        bool   = false
	rootCmd                   = &cobra.Command{
		Use:     "bpftree",
		Short:   "bpftree - a simple CLI tool to inspect system tasks",
		Long:    `bpftree is a simple CLI tool to inspect system tasks`,
		Version: version,
	}
)

func Execute() error {
	return rootCmd.Execute()
}

/* This is called every Execute() for each command. */
func initFunc() {
	/* We initialize only once */
	if initialized {
		return
	}

	if disablePrettyPrint {
		task.DisablePrettyPrint()
	}

	if len(formatFields) != 0 {
		task.SetFormatFields(formatFields)
	}

	if captureFilePath != "" {
		task.SetCaptureFilePath(captureFilePath)
	}

	initialized = true
}

func init() {
	rootCmd.PersistentFlags().BoolVarP(&disablePrettyPrint,
		"no-pretty",
		"n",
		false,
		"disable pretty-print mode")
	rootCmd.PersistentFlags().StringSliceVarP(&formatFields,
		"format",
		"f",
		[]string{},
		`Render the task according to the provided fields.
Fields are separated by ',' (e.g. 'tid,pid,reaper') and DON'T have white spaces between them.`)
	rootCmd.PersistentFlags().StringVarP(&captureFilePath,
		"capture",
		"c",
		"",
		"Read task info from a capture file generated by a previous dump command.")
	cobra.OnInitialize(initFunc)
}
